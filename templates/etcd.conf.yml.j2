---
{{ ansible_managed | comment }}

# This is the configuration file for the etcd server.

# Human-readable name for this member.
name: {{ etcd_member_name | to_json }}

# Path to the data directory.
data-dir: {{ etcd_data_dir | to_json }}

# Path to the dedicated wal directory.
wal-dir: {{ etcd_wal_dir | to_json }}

# Number of committed transactions to trigger a snapshot to disk.
snapshot-count: {{ etcd_snapshot_trigger_count | to_json }}

# Time (in milliseconds) of a heartbeat interval.
heartbeat-interval: {{ etcd_heartbeat_interval | to_json }}

# Time (in milliseconds) for an election to timeout.
election-timeout: {{ etcd_election_timeout | to_json }}

# Raise alarms when backend size exceeds the given quota. 0 means use the
# default quota.
quota-backend-bytes: 0

# List of comma separated URLs to listen on for peer traffic.
listen-peer-urls: {{ etcd_peer_listen_urls | to_json }}

# List of comma separated URLs to listen on for client traffic.
listen-client-urls: {{ etcd_client_listen_urls | to_json }}

# Maximum number of snapshot files to retain (0 is unlimited).
max-snapshots: {{ etcd_snapshot_max_count | to_json }}

# Maximum number of wal files to retain (0 is unlimited).
max-wals: {{ etcd_wal_max_count | to_json }}

{% if etcd_cors_origins | length > 0 %}
# Comma-separated white list of origins for CORS (cross-origin resource sharing).
cors: {{ etcd_cors_origins | to_json }}
{% endif %}

# List of this member's peer URLs to advertise to the rest of the cluster.
# The URLs needed to be a comma-separated list.
initial-advertise-peer-urls: http://localhost:2380

# List of this member's client URLs to advertise to the public.
# The URLs needed to be a comma-separated list.
advertise-client-urls: http://localhost:2379

# Discovery URL used to bootstrap the cluster.
discovery:

# Valid values include 'exit', 'proxy'
discovery-fallback: 'proxy'

# HTTP proxy to use for traffic to discovery service.
discovery-proxy:

# DNS domain used to bootstrap initial cluster.
discovery-srv:

# Comma separated string of initial cluster configuration for bootstrapping.
# Example: initial-cluster: "infra0=http://10.0.1.10:2380,infra1=http://10.0.1.11:2380,infra2=http://10.0.1.12:2380"
initial-cluster:

# Initial cluster token for the etcd cluster during bootstrap.
initial-cluster-token: {{ etcd_cluster_name | to_json }}

# Reject reconfiguration requests that would cause quorum loss.
strict-reconfig-check: false

# client-transport-security:
#   # Path to the client server TLS cert file.
#   cert-file:
#
#   # Path to the client server TLS key file.
#   key-file:
#
#   # Enable client cert authentication.
#   client-cert-auth: false
#
#   # Path to the client server TLS trusted CA cert file.
#   trusted-ca-file:
#
#   # Client TLS using generated certificates
#   auto-tls: false

# peer-transport-security:
#   # Path to the peer server TLS cert file.
#   cert-file:
#
#   # Path to the peer server TLS key file.
#   key-file:
#
#   # Enable peer client cert authentication.
#   client-cert-auth: false
#
#   # Path to the peer server TLS trusted CA cert file.
#   trusted-ca-file:
#
#   # Peer TLS using generated certificates.
#   auto-tls: false
#
#   # Allowed CN for inter peer authentication.
#   allowed-cn:
#
#   # Allowed TLS hostname for inter peer authentication.
#   allowed-hostname:

# The validity period of the self-signed certificate, the unit is year.
# self-signed-cert-validity: 1

auto-compaction-mode: {{ etcd_auto_compaction_mode | to_json }}
auto-compaction-retention: {{ etcd_auto_compaction_retention | string | to_json }}

# Limit etcd to a specific set of tls cipher suites
cipher-suites: [
  TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
  TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
]

tls-min-version: {{ etcd_tls_min_version | to_json }}
tls-max-version: {{ etcd_tls_max_version | to_json }}

# Profiling and monitoring
enable-pprof: {{ etcd_pprof_enabled | to_json }}
metrics: {{ etcd_metrics_level | to_json }}
listen-metrics-urls: {{ etcd_metrics_listen_urls | to_json }}

# Logging
logger: "zap"
log-outputs: [default]
log-level: {{ etcd_log_level | to_json }}
enable-log-rotation: {{ etcd_log_rotation_enabled | to_json }}
